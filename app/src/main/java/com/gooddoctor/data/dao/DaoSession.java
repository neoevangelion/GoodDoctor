package com.gooddoctor.data.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.gooddoctor.data.dao.DBDisease;
import com.gooddoctor.data.dao.DBBoxedMedicine;
import com.gooddoctor.data.dao.DBMedicineBox;
import com.gooddoctor.data.dao.DBNotification;

import com.gooddoctor.data.dao.DBDiseaseDao;
import com.gooddoctor.data.dao.DBBoxedMedicineDao;
import com.gooddoctor.data.dao.DBMedicineBoxDao;
import com.gooddoctor.data.dao.DBNotificationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBDiseaseDaoConfig;
    private final DaoConfig dBBoxedMedicineDaoConfig;
    private final DaoConfig dBMedicineBoxDaoConfig;
    private final DaoConfig dBNotificationDaoConfig;

    private final DBDiseaseDao dBDiseaseDao;
    private final DBBoxedMedicineDao dBBoxedMedicineDao;
    private final DBMedicineBoxDao dBMedicineBoxDao;
    private final DBNotificationDao dBNotificationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBDiseaseDaoConfig = daoConfigMap.get(DBDiseaseDao.class).clone();
        dBDiseaseDaoConfig.initIdentityScope(type);

        dBBoxedMedicineDaoConfig = daoConfigMap.get(DBBoxedMedicineDao.class).clone();
        dBBoxedMedicineDaoConfig.initIdentityScope(type);

        dBMedicineBoxDaoConfig = daoConfigMap.get(DBMedicineBoxDao.class).clone();
        dBMedicineBoxDaoConfig.initIdentityScope(type);

        dBNotificationDaoConfig = daoConfigMap.get(DBNotificationDao.class).clone();
        dBNotificationDaoConfig.initIdentityScope(type);

        dBDiseaseDao = new DBDiseaseDao(dBDiseaseDaoConfig, this);
        dBBoxedMedicineDao = new DBBoxedMedicineDao(dBBoxedMedicineDaoConfig, this);
        dBMedicineBoxDao = new DBMedicineBoxDao(dBMedicineBoxDaoConfig, this);
        dBNotificationDao = new DBNotificationDao(dBNotificationDaoConfig, this);

        registerDao(DBDisease.class, dBDiseaseDao);
        registerDao(DBBoxedMedicine.class, dBBoxedMedicineDao);
        registerDao(DBMedicineBox.class, dBMedicineBoxDao);
        registerDao(DBNotification.class, dBNotificationDao);
    }
    
    public void clear() {
        dBDiseaseDaoConfig.getIdentityScope().clear();
        dBBoxedMedicineDaoConfig.getIdentityScope().clear();
        dBMedicineBoxDaoConfig.getIdentityScope().clear();
        dBNotificationDaoConfig.getIdentityScope().clear();
    }

    public DBDiseaseDao getDBDiseaseDao() {
        return dBDiseaseDao;
    }

    public DBBoxedMedicineDao getDBBoxedMedicineDao() {
        return dBBoxedMedicineDao;
    }

    public DBMedicineBoxDao getDBMedicineBoxDao() {
        return dBMedicineBoxDao;
    }

    public DBNotificationDao getDBNotificationDao() {
        return dBNotificationDao;
    }

}
